//
//  ZRPaymentOrderController.m
//  zhiruProduct
//
//  Created by nanding on 16/9/17.
//  Copyright © 2016年 Zhiru. All rights reserved.
//

#import "ZRPaymentOrderController.h"
#import "ZRPaymentOrderCell.h"
#import "ZRGroupBuyDetailModel.h"

#import <PayPalMobile.h>

#import <AlipaySDK/AlipaySDK.h>
#import "APAuthV2Info.h"
#import "DataSigner.h"
#import "Order.h"


#import "ZRPayOrderRequest.h"

#import "ZRSupermarketRequest.h"
#import "ZRSupermarketHomeModel.h"

#import "ZRAddKaOrderModel.h"

@interface ZRPaymentOrderController ()<UITableViewDataSource, UITableViewDelegate, PayPalPaymentDelegate>

@property (nonatomic, strong) UITableView *tableView;

@property (nonatomic, strong) PayPalConfiguration *payPalConfig;

@property (nonatomic, strong) NSMutableArray *selectedArray;

@end

@implementation ZRPaymentOrderController
#pragma mark - lifeCycle
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.navigationItem.title = @"支付订单";
    [self.view addSubview:self.tableView];
}


-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    //网络请求获取数据
    //下拉获取最新数据
    //下拉加载最新
//    [self.tableView startRefreshWithCallback:^{
//        [self loadDatas];
//    }];
    
}

#pragma mark - 懒加载
-(UITableView *)tableView
{
    if (!_tableView) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 64, SCREEN_WIDTH, SCREEN_HEIGHT-64) style:UITableViewStyleGrouped];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.backgroundColor = RGBCOLOR(250, 250, 250);
    }
    return _tableView;
}


-(NSMutableArray *)selectedArray
{
    if (!_selectedArray) {
        _selectedArray =  [NSMutableArray arrayWithObjects:ZRImage(@"submitOrderDuihao"),ZRImage(@"submitOrderDuihaoGray"),ZRImage(@"submitOrderDuihaoGray"), nil];

    }
    return _selectedArray;
}

#pragma mark - UITableViewDataSource methods
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSInteger num;
    if (self.payOrderType == ZRPayorderGroupBuy) {
        if (section == 0) {
            num = 1;
        }else if (section == 1){
            num = 2;
        }else{
            num = 3;
        }
 
    }else{
        if (section == 0) {
            num = 1;
        }else if (section == 1){
            num = 1;
        }else{
            num = 3;
        }
    }
    return num;
}


-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    ZRPaymentOrderCell *cell = [ZRPaymentOrderCell cellWithTable:self.tableView ForIndexPath:indexPath];
    
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.selectPayArray = self.selectedArray;
    if (self.payOrderType == ZRPayorderGroupBuy) {
        //团购
        cell.groupBuyDetailModel = _groupBuyDetailModel;
        cell.orderType = 0;
    }else if (self.payOrderType == ZRPayOrderSupermarket){
        //超市
        cell.payMoney = self.payPrice;
        cell.orderType = 1;
        
    }else{
        //特惠午餐
        cell.payMoney = self.payPrice;
        cell.orderType = 2;
    }
    
    
    return cell;
}

#pragma mark - UITableViewDelegate methods
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    CGFloat hei;
    if (section == 0) {
        hei = 0.1;
    }else{
        hei = 15*SCREEN_HEIGHT/667;
    }
    return hei;
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    CGFloat hei;
    if (section == 0 || section == 1) {
        hei = 0.1;
    }else{
        hei = 90*SCREEN_HEIGHT/667;
    }
    return hei;
}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CGFloat hei;
    if (indexPath.section == 0) {
        if (self.payOrderType == ZRPayorderGroupBuy) {
            hei = 100*SCREEN_HEIGHT/667;
        }else{
            hei = 40*SCREEN_HEIGHT/667;
        }
        
    }else if (indexPath.section == 1){
        if (indexPath.row == 0) {
            hei = 30*SCREEN_HEIGHT/667;
        }else{
            hei = 60*SCREEN_HEIGHT/667;
        }
    }else{
        hei = 50*SCREEN_HEIGHT/667;
    }
    return hei;
}


-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    UIView *view;
    if (section == 2) {
        view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 90*SCREEN_HEIGHT/667)];
        UIButton *ensurePayBtn = [[UIButton alloc] initWithFrame:CGRectMake(40*SCREEN_WIDTH/375, 25*SCREEN_HEIGHT/667, SCREEN_WIDTH-(80*SCREEN_WIDTH/375), 40*SCREEN_HEIGHT/667)];
        [ensurePayBtn setTitle:@"确认支付" forState:UIControlStateNormal];
        [ensurePayBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        ensurePayBtn.titleLabel.font = CustomFont(15);
        ensurePayBtn.titleLabel.textAlignment = NSTextAlignmentCenter;
        ensurePayBtn.backgroundColor = RGBCOLOR(255, 82, 82);
        [ensurePayBtn addTarget:self action:@selector(ensurePayBtnClick:) forControlEvents:UIControlEventTouchUpInside];
        [view addSubview:ensurePayBtn];
    }else{
        view = nil;
    }

    return view;
    
    
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{

    if (indexPath.section == 2) {
        ZRPaymentOrderCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];
        cell.payStyle = indexPath.row;
        if (cell.payStyle == PaypalSelected) {
            self.selectedArray = [NSMutableArray arrayWithObjects:ZRImage(@"submitOrderDuihao"),ZRImage(@"submitOrderDuihaoGray"),ZRImage(@"submitOrderDuihaoGray"), nil];
        }else if (cell.payStyle == WechatSelected){
            self.selectedArray = [NSMutableArray arrayWithObjects:ZRImage(@"submitOrderDuihaoGray"),ZRImage(@"submitOrderDuihao"),ZRImage(@"submitOrderDuihaoGray"), nil];
        }else{
            self.selectedArray = [NSMutableArray arrayWithObjects:ZRImage(@"submitOrderDuihaoGray"),ZRImage(@"submitOrderDuihaoGray"),ZRImage(@"submitOrderDuihao"), nil];
        }
        
        [tableView reloadData];
        if (indexPath.row == 0) {
            //Paypal
            //配置支付环境
            [PayPalMobile preconnectWithEnvironment:PayPalEnvironmentSandbox];
            
            //是否接受信用卡
            _payPalConfig.acceptCreditCards = NO;
            
            //商家名称
            _payPalConfig.merchantName = _groupBuyDetailModel.businessName;
            
            //商家隐私协议网址和用户授权网址-说实话这个没用到
            _payPalConfig.merchantPrivacyPolicyURL = [NSURL URLWithString:@"https://www.paypal.com/webapps/mpp/ua/privacy-full"];
            _payPalConfig.merchantUserAgreementURL = [NSURL URLWithString:@"https://www.paypal.com/webapps/mpp/ua/useragreement-full"];
            
            //设置地址选项-在支付页面可选择账户地址信息
            typedef NS_ENUM(NSInteger, PayPalShippingAddressOption) {
                //不展示地址信息
                PayPalShippingAddressOptionNone = 0,
                //这个没试过，自行查阅
                PayPalShippingAddressOptionProvided = 1,
                //paypal账号下的地址信息
                PayPalShippingAddressOptionPayPal = 2,
                //全选
                PayPalShippingAddressOptionBoth = 3,
            };
            
            //paypal账号下的地址信息
            _payPalConfig.payPalShippingAddressOption = PayPalShippingAddressOptionPayPal;
            
            //配置语言环境
            _payPalConfig.languageOrLocale = [NSLocale preferredLanguages][0];
            
            
            
            
            PayPalPayment *payment = [[PayPalPayment alloc] init];
            
            //订单总额
            //payment.amount = [NSDecimalNumber decimalNumberWithString:_groupBuyDetailModel.nowPrice];
            payment.amount = [NSDecimalNumber decimalNumberWithString:@"0"];
            
            //货币类型-RMB是没用的
            payment.currencyCode = @"USD";
            
            //订单描述
            payment.shortDescription = @"Hipster clothing";
            
            
            //生成paypal控制器，并模态出来(push也行)
            //将之前生成的订单信息和paypal配置传进来，并设置订单VC为代理
            PayPalPaymentViewController *paymentViewController = [[PayPalPaymentViewController alloc] initWithPayment:payment                                                                                            configuration:self.payPalConfig                                                                                                  delegate:self];
            
            //模态展示
            [self presentViewController:paymentViewController animated:YES completion:nil];
            
            
            
        }else if (indexPath.row == 1){
            //微信支付
            
        }else{
            //支付宝
            [self doAlipayPay];
            
            
            
            
        }
    }
}


#pragma mark - click methods
/**
 *  确认支付点击事件
 */
- (void)ensurePayBtnClick:(UIButton *)sender
{
    
}

#pragma mark - manage memory methods
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



#pragma mark - PayPalPaymentDelegate methods
//订单支付完成后回调此方法
- (void)payPalPaymentViewController:(PayPalPaymentViewController *)paymentViewController didCompletePayment:(PayPalPayment *)completedPayment {
    NSLog(@"PayPal Payment Success!");
    [paymentViewController dismissViewControllerAnimated:YES completion:nil];
}

//用户取消支付回调此方法
- (void)payPalPaymentDidCancel:(PayPalPaymentViewController *)paymentViewController {
    NSLog(@"PayPal Payment Canceled");
    
    [paymentViewController dismissViewControllerAnimated:YES completion:nil];
    
}

//回调的 PayPalPayment 的 confirmation 属性包含此次订单的状态信息包括校验码，服务器可已通过该校验码验证交易真实性。
//返回数据 - id所对应的就是校验码。
//{
//    client =     {
//        environment = sandbox;
//        "paypal_sdk_version" = "2.14.2";
//        platform = iOS;
//        "product_name" = "PayPal iOS SDK";
//    };
//    response =     {
//        "create_time" = "2016-05-12T03:25:49Z";
//        id = "PAY-6BG56850AF923584SK4Z7PNQ";
//        intent = sale;
//        state = approved;
//    };
//    "response_type" = payment;
//}





#pragma mark -
#pragma mark   ==============点击订单模拟支付行为==============
//
//选中商品调用支付宝极简支付
//
- (void)doAlipayPay
{
//    //重要说明
//    //这里只是为了方便直接向商户展示支付宝的整个支付流程；所以Demo中加签过程直接放在客户端完成；
//    //真实App里，privateKey等数据严禁放在客户端，加签过程务必要放在服务端完成；
//    //防止商户私密数据泄露，造成不必要的资金损失，及面临各种安全风险；
//    /*============================================================================*/
//    /*=======================需要填写商户app申请的===================================*/
//    /*============================================================================*/
//    NSString *appID = @"2016092401961567";
////    NSString *privateKey = @"MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOcadpS6PfE66exnuOLE6WioLIbsMbsI7D0B2tmWms2gHYPzVoeZzdJjqMs5KHFVGoewrhEJ/oNbP5XCuzXWVJAH/N/EVfjC8OoPNwNd3badn+YW98KGaQIPKgBzGgMhZw30tyfPAE9fozoqT70VxGfz2Hw7Jw6Z0pP8cSP4sn6NAgMBAAECgYEAti0IOSmvVpAIgtEoz6pGDLg1kY5zjWr1PwpNSKUOFvYXDkMufOpjc2wYTUsbdGuP5FMEhG4KceXmc9nz1fbE5N1yf2jfEHUcr5qdLBqkUuWW7Rx5oH8TI7HRzxuPw5qCul9G8xjRyHxiET6GXj/ygei6Ib2yU9HywY8aqf/41UECQQD91adBgVB4zyRfXnj23Pr6XDmv7uheBscWVR+ix7Fa+eI7HHW/m3W9tv71RfojZHytiXG22l8F0UPm6k0mHGB5AkEA6RMq23+MeEAEByJkAnza8hgLK5tsu0zCn4ej90kd3Laz75cs6aj4DBeNX2/+wWmm5T6RQHstwhiqIdq3ffxRtQJBAKBMS5qfel1AmvyrIYLsXIa8tSV4nz+50gI1cYwPxd3pDkg8GdQN7dYH+YyVS3kMXXwN30UVNIrs84+hCWV26CkCQEeoWfPUGibaX6Kl4yOUqWfnFoAYr+xB5FBRzop3k1PJZDbUPr2z8lcdYpyl/SgPyH0QqG2vsVjMZno0GVgFnEUCQQDIiXSB3ZuChreJCJ1IX+ksf7eL6L+gzh2T8p0zasS9XqRH9wB+qRlppFkTmjsd8ZXZua19U34u61Rcqvb57SGx";
////    
////    
////    
////    
////    /*============================================================================*/
////    /*============================================================================*/
////    /*============================================================================*/
////    
////    //partner和seller获取失败,提示
////    if ([appID length] == 0 ||
////        [privateKey length] == 0)
////    {
////        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"提示"
////                                                        message:@"缺少appId或者私钥。"
////                                                       delegate:self
////                                              cancelButtonTitle:@"确定"
////                                              otherButtonTitles:nil];
////        [alert show];
////        return;
////    }
//    
//    /*
//     *生成订单信息及签名
//     */
//    //将商品信息赋予AlixPayOrder的成员变量
//    Order* order = [Order new];
//    
//    // NOTE: app_id设置
//    order.app_id = appID;
//    
//    // NOTE: 支付接口名称
//    order.method = @"alipay.trade.app.pay";
//    
//    // NOTE: 参数编码格式
//    order.charset = @"utf-8";
//    
//    // NOTE: 当前时间点
//    NSDateFormatter* formatter = [NSDateFormatter new];
//    [formatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
//    order.timestamp = [formatter stringFromDate:[NSDate date]];
//    
//    // NOTE: 支付版本
//    order.version = @"1.0";
//    
//    // NOTE: sign_type设置
//    order.sign_type = @"RSA";
//    
//    // NOTE: 商品数据
//    order.biz_content = [BizContent new];
//    order.biz_content.body = @"我是测试数据";
//    order.biz_content.subject = @"1";
//    order.biz_content.out_trade_no = [self generateTradeNO]; //订单ID（由商家自行制定）
//    order.biz_content.timeout_express = @"30m"; //超时时间设置
//    order.biz_content.total_amount = [NSString stringWithFormat:@"%.2f", 0.01]; //商品价格
//    
//    //将商品信息拼接成字符串
//    NSString *orderInfo = [order orderInfoEncoded:NO];
//    NSString *orderInfoEncoded = [order orderInfoEncoded:YES];
//    NSLog(@"orderSpec = %@",orderInfo);
//    
//    // NOTE: 获取私钥并将商户信息签名，外部商户的加签过程请务必放在服务端，防止公私钥数据泄露；
//    //       需要遵循RSA签名规范，并将签名字符串base64编码和UrlEncode
////    id<DataSigner> signer = CreateRSADataSigner(privateKey);
////    NSString *signedString = [signer signString:orderInfo];
//    
//    // NOTE: 如果加签成功，则继续执行支付
////    if (signedString != nil) {
////        //应用注册scheme,在AliSDKDemo-Info.plist定义URL types
////        NSString *appScheme = @"alisdkdemo";
////        
////        // NOTE: 将签名成功字符串格式化为订单字符串,请严格按照该格式
////        NSString *orderString = [NSString stringWithFormat:@"%@&sign=%@",
////                                 orderInfoEncoded, signedString];
////        
////        // NOTE: 调用支付结果开始支付
////        [[AlipaySDK defaultService] payOrder:orderString fromScheme:appScheme callback:^(NSDictionary *resultDic) {
////            NSLog(@"reslut = %@======memo===%@",resultDic,resultDic[@"memo"]);
////        }];
////    }
//    
//    
//    
//    //应用注册scheme,在AliSDKDemo-Info.plist定义URL types
//    NSString *appScheme = @"alisdkdemo";
//    
//    NSString *sign = @"Umz3lvI9AQ5mpKnwLjNiEN9aokTm9dJNUqB7WW8eSVDKM1aAJOWErHFP7ajWWMbhu7XsLmv%2F94d9NWnqzWMd6MSOwHVaPH41DTmUN6%2B%2BqBo2my9dfY%2FbfoyD1w64usSGoeezs11EpAPbPYacoOer2mH6dh4wlaWEcUHgMr%2BaVs4%3D";
//    
//    NSString *newsign = (NSString *)CFBridgingRelease(CFURLCreateStringByAddingPercentEscapes(kCFAllocatorDefault, (CFStringRef)sign, NULL, (CFStringRef)@"!*'();:@&=+ $,./?%#[]", kCFStringEncodingUTF8));
//  
//    
//    
//    // NOTE: 将签名成功字符串格式化为订单字符串,请严格按照该格式
//    NSString *orderString = [NSString stringWithFormat:@"%@&sign=%@",orderInfoEncoded,newsign];
//    
//    // NOTE: 调用支付结果开始支付
//    [[AlipaySDK defaultService] payOrder:orderString fromScheme:appScheme callback:^(NSDictionary *resultDic) {
//        NSLog(@"reslut = %@======memo===%@",resultDic,resultDic[@"memo"]);
//    }];
//
    
    
    
    //网络请求
//    ZRPayOrderRequest *request = [ZRPayOrderRequest requestForAddLunchOrderWithSendTime:<#(NSString *)#> Price:<#(NSString *)#> Taxation:<#(NSString *)#> Total:<#(NSString *)#> ReceiptAddress:<#(NSString *)#> PayMethod:<#(NSString *)#> Remarks:<#(NSString *)#> LunchOrderGoods:<#(NSMutableDictionary *)#> CallBack:<#^(id details, NSError *error)callback#>]
    
    
    
    
    
    
    
    // NOTE: 将签名成功字符串格式化为订单字符串,请严格按照该格式
    NSString *orderString = self.addKaOrderModel.signOrderUrl;
    

    NSString *appScheme = @"alisdkdemo";
    
    // NOTE: 调用支付结果开始支付
    [[AlipaySDK defaultService] payOrder:orderString fromScheme:appScheme callback:^(NSDictionary *resultDic) {
        NSLog(@"reslut = %@======memo===%@",resultDic,resultDic[@"memo"]);
    }];

    
    
}


- (NSString *)generateTradeNO
{
    static int kNumber = 15;
    
    NSString *sourceStr = @"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    NSMutableString *resultStr = [[NSMutableString alloc] init];
    srand((unsigned)time(0));
    for (int i = 0; i < kNumber; i++)
    {
        unsigned index = rand() % [sourceStr length];
        NSString *oneStr = [sourceStr substringWithRange:NSMakeRange(index, 1)];
        [resultStr appendString:oneStr];
    }
    return resultStr;
}






/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
